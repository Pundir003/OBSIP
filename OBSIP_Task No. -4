
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report
import matplotlib.pyplot as plt
import seaborn as sns

try:
    df = pd.read_csv('C:/Users/ujjwa/Desktop/spam.csv', encoding='latin1')
except UnicodeDecodeError:
    try:
        df = pd.read_csv('C:/Users/ujjwa/Desktop/spam.csv', encoding='ISO-8859-1')
    except UnicodeDecodeError:
        df = pd.read_csv('C:/Users/ujjwa/Desktop/spam.csv', encoding='utf-8')

print(df.head())
print(df.columns)

df.columns = ['label', 'text', 'unused1', 'unused2', 'unused3']  # Adjust based on the actual columns

df = df.drop(columns=['unused1', 'unused2', 'unused3'])

# Encode labels: Spam = 1, Ham (Non-spam) = 0
df['label'] = df['label'].map({'spam': 1, 'ham': 0})

X = df['text']
y = df['label']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

vectorizer = TfidfVectorizer(stop_words='english')
X_train_tfidf = vectorizer.fit_transform(X_train)
X_test_tfidf = vectorizer.transform(X_test)

model = MultinomialNB()
model.fit(X_train_tfidf, y_train)

y_pred = model.predict(X_test_tfidf)

accuracy = accuracy_score(y_test, y_pred)
report = classification_report(y_test, y_pred)

print(f"Accuracy: {accuracy:.4f}")
print("Classification Report:")
print(report)

from sklearn.metrics import confusion_matrix

conf_matrix = confusion_matrix(y_test, y_pred)
plt.figure(figsize=(8, 6))
sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues', 
            xticklabels=['Non-Spam', 'Spam'], yticklabels=['Non-Spam', 'Spam'])
plt.xlabel('Predicted')
plt.ylabel('True')
plt.title('Confusion Matrix')
plt.show()
